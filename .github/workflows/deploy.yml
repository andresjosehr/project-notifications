name: Deploy to Production

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm install
        npm ci --workspace=apps/api
        npm ci --workspace=apps/frontend
        
    - name: Install knex in api directory
      run: |
        cd apps/api
        npm install knex mysql2
        
    - name: Build frontend
      run: npm run build:frontend
      
    - name: Run database migrations
      run: |
        cd apps/api
        npx knex migrate:latest
      env:
        NODE_ENV: production
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_DATABASE: ${{ secrets.DB_DATABASE }}
        
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.PORT }}
        timeout: 60s
        command_timeout: 10m
        debug: true
        envs: NODE_ENV,DB_HOST,DB_USER,DB_PASSWORD,DB_DATABASE
        script: |
          cd /var/www/projects/jobs
          git pull origin master
          npm install
          npm ci --workspace=apps/api
          npm ci --workspace=apps/frontend
          npm run build:frontend
          cd apps/api
          npm install knex mysql2
          npx knex migrate:latest
          cd ../..
          pm2 restart jobs-api
          pm2 save
      env:
        NODE_ENV: production
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_DATABASE: ${{ secrets.DB_DATABASE }}