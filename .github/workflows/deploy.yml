name: Deploy to Production

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, pdo_mysql
        coverage: none
        
    - name: Install dependencies
      run: |
        npm install
        npm ci --workspace=apps/frontend
        
    - name: Install Laravel dependencies
      run: |
        cd apps/api
        composer install --no-dev --optimize-autoloader
        
    - name: Install Node.js CLI dependencies (optional)
      run: |
        cd apps/api
        npm install
        
    - name: Build frontend
      run: npm run build:frontend
      
    # - name: Debug SSH connection
    #   run: |
    #     echo "HOST is set: ${{ secrets.HOST != '' }}"
    #     echo "USERNAME is set: ${{ secrets.USERNAME != '' }}"
    #     echo "PORT is set: ${{ secrets.PORT != '' }}"
    #     echo "SSH_PRIVATE_KEY is set: ${{ secrets.SSH_PRIVATE_KEY != '' }}"
      
    # - name: Run Laravel migrations
    #   run: |
    #     cd apps/api
    #     php artisan migrate --force
      env:
        APP_ENV: production
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_USERNAME: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_DATABASE: ${{ secrets.DB_DATABASE }}
        
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.PORT || '22' }}
        timeout: 60s
        command_timeout: 15m
        debug: true
        use_insecure_cipher: false
        script: |
          echo "=== Starting deployment as github-deploy user ==="
          whoami
          
          echo "=== Checking project directory permissions ==="
          ls -la /var/www/projects/jobs/
          
          echo "=== Checking repository status ==="
          cd /var/www/projects/jobs
          git status
          echo "Current commit:"
          git log --oneline -1
          
          echo "=== Pulling latest code ==="
          git fetch origin
          
          # Check for uncommitted changes
          if [ -n "$(git status --porcelain)" ]; then
            echo "Found uncommitted changes. Stashing..."
            git stash
          fi
          
          # Reset to remote master state
          git reset --hard origin/master
          
          echo "=== Verifying pull was successful ==="
          git log --oneline -1
          
          echo "=== Installing root dependencies ==="
          rm -rf node_modules package-lock.json
          npm install --no-fund --no-audit
          
          echo "=== Building frontend ==="
          cd /var/www/projects/jobs/apps/frontend
          rm -rf node_modules package-lock.json
          npm install --no-fund --no-audit
          ng build --configuration production
          
          echo "=== Installing Laravel dependencies ==="
          cd /var/www/projects/jobs/apps/api
          rm -rf node_modules package-lock.json
          composer install --no-dev --optimize-autoloader --no-interaction
          
          echo "=== Installing API Node dependencies ==="
          npm install --no-fund --no-audit
          
          echo "=== Clearing Laravel caches ==="
          php artisan config:clear
          php artisan route:clear
          php artisan view:clear
          php artisan cache:clear
          
          echo "=== Optimizing Laravel ==="
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          
          echo "=== Running migrations ==="
          php artisan migrate --force
          
          echo "=== Restarting services ==="
          php artisan queue:restart
          
          echo "=== Deployment completed successfully ==="
